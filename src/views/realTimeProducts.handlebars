<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h1>Productos en Tiempo Real</h1>
            <!-- Formulario para agregar un nuevo producto -->
            <form id="formulario-producto" method="post" enctype="multipart/form-data" action="/api/products/" class="mt-3">
                <div class="mb-3">
                    <input type="text" id="nombre-producto" name="title" class="form-control" placeholder="Título del Producto" />
                </div>
                <div class="mb-3">
                    <input type="text" id="descripcion-producto" name="description" class="form-control" placeholder="Descripción del Producto" />
                </div>
                <div class="mb-3">
                    <input type="number" id="precio-producto" name="price" class="form-control" placeholder="Precio del Producto" />
                </div>
                <div class="mb-3">
                    <input type="text" id="codigo-producto" name="code" class="form-control" placeholder="Código del Producto" />
                </div>
                <div class="mb-3">
                    <input type="number" id="stock-producto" name="stock" class="form-control" placeholder="Stock del Producto" />
                </div>
                <div class="mb-3">
                    <input type="file" id="thumbnails-producto" name="thumbnails" class="form-control" multiple />
                </div>
                <button id="agregar-producto-btn" class="btn btn-primary">Agregar Producto</button>
            </form>
        
        </div>
    </div>
</div>
<div class="container">
    <ul id="lista-productos" class="list-group"></ul>
</div>
<script src="https://cdn.socket.io/4.7.5/socket.io.min.js" integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO" crossorigin="anonymous"></script>
<script>    
    const serverAddress = 'ws://localhost:4000';
    const socketClient = io(serverAddress);
    const productsList = document.getElementById('lista-productos');

// Manejar envío del formulario
document.getElementById('agregar-producto-btn').addEventListener('click', async (event) => {
    event.preventDefault(); // Prevenir el comportamiento predeterminado del formulario

    // Crear un objeto FormData para enviar el formulario
    const formData = new FormData(document.getElementById('formulario-producto'));

    try {
        // Realizar la solicitud POST al servidor
        const response = await fetch('/api/products/', {
            method: 'POST',
            body: formData,
        });

        // Verificar si la solicitud fue exitosa
        if (response.ok) {
            // Limpiar los campos del formulario después de enviar el producto
            document.getElementById('formulario-producto').reset();
        } else {
            // Mostrar un mensaje de error si la solicitud no fue exitosa
            console.error('Error al agregar el producto:', response.statusText);
        }
    } catch (error) {
        console.error('Error al agregar el producto:', error.message);
    }
});

// Escuchar eventos del servidor Socket.IO

socketClient.on('nuevoProducto', (producto) => {
    // Crear un nuevo elemento de la lista con el producto recibido
    const listaProductos = document.getElementById('lista-productos');
    const nuevoItem = document.createElement('li');
    nuevoItem.textContent = producto.title;
    nuevoItem.classList.add('list-group-item');
    listaProductos.appendChild(nuevoItem);
});
</script>
